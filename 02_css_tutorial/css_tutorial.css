/*
【　セレクタ { プロパティ名: 値; }　】

* ：ユニバーサルクラスタ。全セレクタを指す。『*.{color...}』とか。
要素名：p とか h1 とかのタグ。
# ： id
. ： class（タグには classを複数指定可）
================================================
a, b ：aとbが対象
a b  ：aの下の階層の b全てが対象
a > b：a直下の階層の bだけが対照
a + b：aの次のbが対象
a.x  ：a要素かつ、classが「x」
================================================
【 user agent stylesheet 】
ブラウザが標準で持っているCSS。
これがあるおかげで、h1 タグを書いたら太字になったりする。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 スタイルの継承 】
bodyを装飾すると、中身の pタグも同内容で装飾される。

継承されないタグでも、inherit で明示的に継承させる事が出来る。
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【　属性セレクタ　】
タグ[属性] { プロパティ名: 値; }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【　疑似クラス　】
ある要素が特定の『状態』にある場合にスタイルを指定するための、
特殊なセレクタ。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【　疑似要素　】

ある要素の一部を指定するときに使う。
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【　セレクタの優先度　】

1  style=""（直接書く）
2  id
3  属性/疑似クラス
4  要素/疑似要素

優先度が同一の記述が複数あった場合、後から書いた方が適用される。
『!important』を使用すると、ルールに関係なく最優先となる。
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 文字サイズ 】

px：ピクセル。（≒ドット）
em：相対的な値。ベースとなっている親要素のフォントサイズに対して、何倍か。（何文字文か）。2emなら、親に対して２倍。
%：相対的な値。ベースとなっている親要素のフォントサイズに対して、何%か。
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 text 】

    border: brown 5px double;
    margin:20px;
    color:black;
    font-size: 14px;
    font-family: Arial, Helvetica;（優先順位が高い順に記述）
    font-weight: bold/normal;
    text-align: right/center/left;（揃え位置）
    text-decoration: underline/line-through/none;（下線/打消し戦/リンクの下線消し）

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 border/margin 】

border-color
border-width
border-style
　　solid：実線
　　dotted：点線
　　dashed：破線
　　double：二重線
　　inset：立体的に見せる
　　outset：立体的に見せる
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 list-style 】

list-style-type: disc/circle/square/decimal/lower-alpha/lower-roman（黒丸/白丸/四角/数値/アルファベット/ローマ数字）
list-style-position: inside/outside;（要素内の改行位置の差。insideは、マーカーが内側に入る。）
list-style: url("xxxx"); （画像。list-style-typeは無効となる）

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 cursor 】
カーソルを合わせた時のマウスポインタの画像

    cursor: help;（？マーク）
    cursor: move;（上下左右の矢印）
    cursor: pointer;（指マーク）
    cursor: url("shrimp_mini.png"), auto;（画像。無い場合、auto（規定の内容を使用。編集可。））

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 ボックスモデル 】
下に積み重なっていく要素。
【 ブロックレベル要素 】
h1、p のように、ボックスモデルを生成する要素

【 インラインボックス 】
左に積み重なっていく要素。
【 インラインレベル要素 】
span、a のように、インラインボックスを生成する要素

display
 - blocl（ブロックボックスとして使用）
 - inline（インラインボックスとして使用）※幅と高さの指定は無効となる。指定したい場合は inline-blockを使う。
 - list-item（左にマーカーをつける）
 - inline-block（インラインレベルの要素のように左詰めだが、ブロックレベル要素の性質を持つ）
 - none（表示しない）
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 position 】
static   （標準。位置を指定できない。）
relative （staticの位置からズラして表示）
fixed    （スクロールさせても動かない。通常の要素の位置から外れる。）
absolute （親要素のポジションによって、配置の基準が変わる。親要素が staticの時、Windowが基準となる。）

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 z-index 】 要素の重なり具合を表す ※position:static以外の時のみ有効
値が大きいほど上に行く

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 overflow 】 幅と高さを超える文字の入力があった時の表示方法
visible  （デフォルト。枠の大きさを変えず、そのまま表示。はみ出る。）
hidden   （はみ出た部分を非表示）
scroll   （スクロール領域を作成）

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 inline-height 】 
ボックスモデルに対し、行単位でもボックスが作成されている。
その１つ１つの行に対して制御をかける。

（例）
    font-size: 18px;
    line-height: 26px;
行の高さが 26、フォントサイズが 18。
差分の 6は案分して上下に行間として配置される。

サイズではなく、フォントサイズの比率での記述が推奨。
（例）
    font-size: 18px;
    line-height: 1.5;
※単位は書かない

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 float 】 
通常の配置の流れから外し、浮いている状態にする。
floatを付けたら、幅も設定するようにする。

float: right  （右寄せ。画像に使ったり。テキストが左に来る。）
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 clear 】 
floatを解除。
はみ出して、別の要素の上に来ないようにする。
ブロックレベル要素にしか定義できない。

clear: right;
clear:both
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 margin（paddingも同様） 】 

p.sample1 {margin: 10px;}                   （上下左右）
p.sample2 {margin: 10px 20px;}              （上下）  （左右）
p.sample3 {margin: 10px 20px 30px;}         （上）  （左右）  （下）
p.sample4 {margin: 10px 20px 30px 40px;}    （上）  （右）  （下）  （左）
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

【 vertical-align 】 

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
*/
* {
    color: rgb(21, 91, 170);
}
#first {
    color:orange;
}
.points {
    color:violet;
}
/*-------------------------------------*/
h2, blockquote { color:burlywood;}

/* devの下の階層の span全てが対象 */
div span {color:rgb(47, 45, 170);}

/* dev直下の階層の spanだけが対象 */
div > span {color:rgb(211, 90, 9);}

/* pの次の p要素が対象 */
p + p  {color:rgb(165, 11, 127);}

/* p要素かつ、classが「point」が対象 */
p.points {color:rgb(40, 5, 95);}

/*
【　属性セレクタ　】
*/

/* aタグのtitle属性が対照 */
a[title] {color:blue}

/* aタグのhref属性が「google.co.jp」が対照 */
a[href="http://google.co.jp"] {color:red}

/* aタグのclass属性に「search」が含まれているものが対照 */
a[class~="search"] {color:green}

/*
【　疑似クラス　】
:link
:visited
:hover
:active
など
http://weboook.blog22.fc2.com/blog-entry-287.html
*/

/* ul > liの、最初の要素だけに、特定の style を適用。 */
ul li:first-child {color:blueviolet}

/* a  ※優先順位の関係上、この順番で。*/
a:link {color:rgb(44, 146, 28)}    /* 未訪問 */
a:visited {color:rgb(4, 29, 11)}   /* 訪問済み */
a:hover {color:rgb(145, 16, 93)}   /* カーソルが載っている */
a:active {color:rgb(189, 18, 18)}  /* クリックした時 */

/* input要素がフォーカスされた時 */
input:focus {color:red } /* フォーカスされた時だけ色が変わる */


/*
【　疑似要素　】
::first-letter　･･･　最初に現れる文字に適用
::first-line　･･･　最初の行に適用
::before　･･･　要素の前に内容を追加
::after　･･･　要素の後に内容を追加
など
*/
div > div > p:first-line { color:red } /* pタグの１行目 */
div > div > p:first-letter { font-size: 20pt} /* 最初の文字 */
/* pの直前/直後　に、指定のテキストを出力 */
div > div > p::before{
    content: "-->";
}
div > div > p::after{
    content: " <--";
}

/*
優先度
*/
div > div > a { color:blue !important
                ;font-size: 50px}
div > div > a.gc { color:orange }
div > div > a.search { color:orange } /* 後述の方が優先される */
div > div > a#gi { color:pink }

/*
font-size指定
*/
div#ctg1 > p  { font-size: 32px; }
div#ctg1 > h1 { font-size: 2em; }
div#ctg1 > h2 { font-size: 150%; }

/*
色
*/
div#ctg1 > p  { color:blue }
div#ctg1 > h1 { color:#00f }
div#ctg1 > h2 { color:#0000ff }
div#ctg1 > h3 { color:rgb(31, 31, 138) }
div#ctg1 > h4 { color:rgb(0%, 0%, 100%) }

/*
ボックスモデル
*/
div#ctg2 {
    color:black;
    background: silver;
    width: 200px;
    height: 100px;
}

body, html{ height:100% }
div#ctg3 {
    color:blue;
    background: rgb(121, 73, 73);
    width: 50%;  /* ブラウザの大きさを変えると、動的に変更される */
    height: 10%; /* 高さに関しては、親要素のサイズを明示しなければならない。 */
}

div#ctg4 {
    border-color: orange;
    border-width: 4px;
    border-style: dotted;
}

div#ctg5 { /* ↑と同じ */
    border: orange 4px dotted;
}

/* 
パティング 
*/
body{ margin:0 }
div#ctg6 {
    border-top: orange 4px dotted;
    border-bottom: orange 4px dotted;
    border-left: orange 4px dotted;
    border-right: orange 4px dotted;

    padding-top:4px;
    padding-bottom:4px;
    padding-right:4px;
    padding-left:4px;
}

/* 
マージン 
*/
div#ctg7 {
    border: black 5px double;
    margin:10px 20px 40px;
}
/* marginの相殺。↑の下 40pxと↑の上20pxの値を合算して 60pxとならず、大きい方（40px）が設定される。  */
div#ctg8 {
    border: brown 5px double;
    margin:20px;
    /* -------------- */
    color:black;
    font-size: 14px;
    font-family: Arial, Helvetica;
    font-weight: bold;
    text-align: center;
    text-decoration: underline line-through;
}

/* 
リストスタイル 
*/
div#ctg9 > ul {
    list-style-type: lower-roman;
    list-style-position: inside;
    list-style: url("./resources/shrimp_mini.png");
}

/* 
カーソル 
*/
.help {
    cursor: help;
}
.dragme {
    cursor: move;
}
.clickme {
    cursor: pointer;
}
.shrimp {
    cursor: url("./resources/shrimp_mini.png"), auto;
}

/*
背景
*/
body {
    background-color: rgb(241, 226, 226);
    background-image: url("./resources/shrimp.png");
    background-repeat: no-repeat; /* 1回だけ表示 */
    /* background-repeat: repeat-x; */ /* X方向だけ繰り返し表示 */
    background-position: top center;
    /* background-position: 10px 10px; */
    background-attachment: fixed; /* スクロースしても画像を固定 */
    /* background-attachment: scroll; */
}
/*
以下のようにまとめて書くこともできる。順不同。
body { background: url("./resources/shrimp.png") no-repeat top center }
*/

/*
display（ボックスモデル・インラインボックス）
*/
div#ctg10 > h1 {
     border: 1px solid blue; 
     display: inline; 
}
div#ctg10 > p { 
    border: 1px solid blue; 
    display: inline-block;
    width: 80px;
    height: 50px;
}
div#ctg10 > span { 
    border: 1px solid blue; 
    display: none;
}
div#ctg10 > a { 
    border: 1px solid blue; 
    display: list-item;
}

/*
display  table
*/
.container {
    display: table;
    width: 300px;
}
.box {
    display: table-cell;
    width: 100px;
}
.row {
    display: table-row;
}
.gray{ background-color: gray;}
.silver{ background-color: silver }
.orange{ background-color: orange }

/*
pisition
*/
#box1 { width:100px; height: 50px; }
#box2 { width:100px; height: 50px; }
#box3 { width: 50px; height: 25px; }

#box1 {
    background: gray;
    position: relative;
    top:10px;
    left: 10px;
}
#box2 {
    background: silver;
    position: relative;
}
#box3 {
    background: orange;
    position: absolute;
    top: 10px;
    left:10px;
}

/*
z-index
*/
#box4, #box5, #box6 { 
    width:100px; 
    height: 50px; 
}

#box4 {
    background: gray;
    top:10px;
    left:10px;
    position: relative;
    z-index: 3;
}
#box5 {
    background: silver;
    top:20px;
    left:20px;
    position: relative;
    z-index: 1;
}
#box6 {
    background: orange;
    top:30px;
    left:30px;
    position: relative;
    z-index: 2;
}

#area01{
    width:200px;
    height:200px;
    font-weight:bold;
    background-color:red;
    position:relative;
    top:0px;
    left:0px;
    z-index:3;
}
#area02{
    width:200px;
    height:200px;
    font-weight:bold;
    background-color:green;
    position:relative;
    top:-100px;
    left:100px;
    z-index:2;
}
#area03{
    width:200px;
    height:200px;
    font-weight:bold;
    background-color:yellow;
    position:relative;
    top:-200px;
    left:200px;
    z-index:1;
}

/*
overflow
*/
#box7 {
    background: gray;
    width:100px; 
    height: 50px; 
    top:10px;
    left:10px;
    position: relative;
    overflow: visible;
}
#box8 {
    background: silver;
    width:100px; 
    height: 50px; 
    top:20px;
    left:100px;
    position: relative;
    overflow: hidden;
}
#box9 {
    background: orange;
    width:100px; 
    height: 50px; 
    top:30px;
    left:200px;
    position: relative;
    overflow: scroll;
}

/*
inline-height
*/
div#ctg17 > p {
    border: 1px solid black;
    font-size: 18px;
    line-height: 1.5;
    vertical-align: baseline;
}

/*
float
*/
div#ctg18 > p {
    border: 1px solid black;
}

#ctg18 img {
    float: right;
    width:400px;
}

/*
clear
*/
#ctg18 h2 {
    clear: right;
}
