/*
【　セレクタ { プロパティ名: 値; }　】

* ：ユニバーサルクラスタ。全セレクタを指す。『*.{color...}』とか。
要素名：p とか h1 とかのタグ。
# ： id
. ： class
================================================
a, b ：aとbが対象
a b  ：aの下の階層の b全てが対象
a > b：a直下の階層の bだけが対照
a + b：aの次のbが対象
a.x  ：a要素かつ、classが「x」
================================================
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【　属性セレクタ　】
タグ[属性] { プロパティ名: 値; }

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【　疑似クラス　】
ある要素が特定の『状態』にある場合にスタイルを指定するための、
特殊なセレクタ。

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【　疑似要素　】

ある要素の一部を指定するときに使う。
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【　セレクタの優先度　】

1  style=""（直接書く）
2  id
3  属性/疑似クラス
4  要素/疑似要素

優先度が同一の記述が複数あった場合、後から書いた方が適用される。
『!important』を使用すると、ルールに関係なく最優先となる。
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 文字サイズ 】

px：ピクセル。（≒ドット）
em：相対的な値。ベースとなっている親要素のフォントサイズに対して、何倍か。（何文字文か）。2emなら、親に対して２倍。
%：相対的な値。ベースとなっている親要素のフォントサイズに対して、何%か。
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 text 】

    border: brown 5px double;
    margin:20px;
    color:black;
    font-size: 14px;
    font-family: Arial, Helvetica;（優先順位が高い順に記述）
    font-weight: bold/normal;
    text-align: right/center/left;（揃え位置）
    text-decoration: underline/line-through/none;（下線/打消し戦/リンクの下線消し）

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 border/margin 】

border-color
border-width
border-style
　　solid：実線
　　dotted：点線
　　dashed：破線
　　double：二重線
　　inset：立体的に見せる
　　outset：立体的に見せる
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 list-style 】

list-style-type: disc/circle/square/decimal/lower-alpha/lower-roman（黒丸/白丸/四角/数値/アルファベット/ローマ数字）
list-style-position: inside/outside;（要素内の改行位置の差。insideは、マーカーが内側に入る。）
list-style: url("xxxx"); （画像。list-style-typeは無効となる）

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 cursor 】
カーソルを合わせた時のマウスポインタの画像

    cursor: help;（？マーク）
    cursor: move;（上下左右の矢印）
    cursor: pointer;（指マーク）
    cursor: url("shrimp_mini.png"), auto;（画像。無い場合、auto（規定の内容を使用。編集可。））

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
【 ボックスモデル 】
下に積み重なっていく要素。
【 ブロックレベル要素 】
h1、p のように、ボックスモデルを生成する要素

【 インラインボックス 】
左に積み重なっていく要素。
【 インラインレベル要素 】
span、a のように、インラインボックスを生成する要素

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
*/
* {
    color: rgb(21, 91, 170);
}
#first {
    color:orange;
}
.points {
    color:violet;
}
/*-------------------------------------*/
h2, blockquote { color:burlywood;}

/* devの下の階層の span全てが対象 */
div span {color:rgb(47, 45, 170);}

/* dev直下の階層の spanだけが対象 */
div > span {color:rgb(211, 90, 9);}

/* pの次の p要素が対象 */
p + p  {color:rgb(165, 11, 127);}

/* p要素かつ、classが「point」が対象 */
p.points {color:rgb(40, 5, 95);}

/*
【　属性セレクタ　】
*/

/* aタグのtitle属性が対照 */
a[title] {color:blue}

/* aタグのhref属性が「google.co.jp」が対照 */
a[href="http://google.co.jp"] {color:red}

/* aタグのclass属性に「search」が含まれているものが対照 */
a[class~="search"] {color:green}

/*
【　疑似クラス　】
*/

/* ul > liの、最初の要素だけに、特定の style を適用。 */
ul li:first-child {color:blueviolet}

/* a  ※優先順位の関係上、この順番で。*/
a:link {color:rgb(44, 146, 28)}    /* 未訪問 */
a:visited {color:rgb(4, 29, 11)}   /* 訪問済み */
a:hover {color:rgb(145, 16, 93)}   /* カーソルが載っている */
a:active {color:rgb(189, 18, 18)}  /* クリックした時 */

/* input要素がフォーカスされた時 */
input:focus {color:red } /* フォーカスされた時だけ色が変わる */


/*
【　疑似要素　】
*/
div > div > p:first-line { color:red } /* pタグの１行目 */
div > div > p:first-letter { font-size: 20pt} /* 最初の文字 */
/* pの直前/直後　に、指定のテキストを出力 */
div > div > p::before{
    content: "-->";
}
div > div > p::after{
    content: " <--";
}

/*
優先度
*/
div > div > a { color:blue !important
                ;font-size: 50px}
div > div > a.gc { color:orange }
div > div > a.search { color:orange } /* 後述の方が優先される */
div > div > a#gi { color:pink }

/*
font-size指定
*/
div#ctg1 > p  { font-size: 32px; }
div#ctg1 > h1 { font-size: 2em; }
div#ctg1 > h2 { font-size: 150%; }

/*
色
*/
div#ctg1 > p  { color:blue }
div#ctg1 > h1 { color:#00f }
div#ctg1 > h2 { color:#0000ff }
div#ctg1 > h3 { color:rgb(31, 31, 138) }
div#ctg1 > h4 { color:rgb(0%, 0%, 100%) }

/*
ボックスモデル
*/
div#ctg2 {
    color:black;
    background: silver;
    width: 200px;
    height: 100px;
}

body, html{ height:100% }
div#ctg3 {
    color:blue;
    background: rgb(121, 73, 73);
    width: 50%;  /* ブラウザの大きさを変えると、動的に変更される */
    height: 10%; /* 高さに関しては、親要素のサイズを明示しなければならない。 */
}

div#ctg4 {
    border-color: orange;
    border-width: 4px;
    border-style: dotted;
}

div#ctg5 { /* ↑と同じ */
    border: orange 4px dotted;
}

/* 
パティング 
*/
body{ margin:0 }
div#ctg6 {
    border-top: orange 4px dotted;
    border-bottom: orange 4px dotted;
    border-left: orange 4px dotted;
    border-right: orange 4px dotted;

    padding-top:4px;
    padding-bottom:4px;
    padding-right:4px;
    padding-left:4px;
}

/* 
マージン 
*/
div#ctg7 {
    border: black 5px double;
    margin:10px 20px 40px;
}
/* marginの相殺。↑の下 40pxと↑の上20pxの値を合算して 60pxとならず、大きい方（40px）が設定される。  */
div#ctg8 {
    border: brown 5px double;
    margin:20px;
    /* -------------- */
    color:black;
    font-size: 14px;
    font-family: Arial, Helvetica;
    font-weight: bold;
    text-align: center;
    text-decoration: underline line-through;
}

/* 
リストスタイル 
*/
div#ctg9 > ul {
    list-style-type: lower-roman;
    list-style-position: inside;
    list-style: url("shrimp_mini.png");
}

/* 
カーソル 
*/
.help {
    cursor: help;
}
.dragme {
    cursor: move;
}
.clickme {
    cursor: pointer;
}
.shrimp {
    cursor: url("shrimp_mini.png"), auto;
}

/*
背景
*/
body {
    background-color: rgb(241, 226, 226);
    background-image: url("shrimp.png");
    background-repeat: no-repeat; /* 1回だけ表示 */
    /* background-repeat: repeat-x; */ /* X方向だけ繰り返し表示 */
    background-position: top center;
    /* background-position: 10px 10px; */
    background-attachment: fixed; /* スクロースしても画像を固定 */
    /* background-attachment: scroll; */
}
/*
以下のようにまとめて書くこともできる。順不同。
body { background: url("shrimp.png") no-repeat top center }
*/

/*
display（ボックスモデル・インラインボックス）
*/
div#ctg10 > h1 {
     border: 1px solid blue; 
     display: inline; /* *
}
div#ctg10 > p { 
    border: 1px solid blue; 
    display: inline;
}
div#ctg10 > span { 
    border: 1px solid blue; 
}
div#ctg10 > a { 
    border: 1px solid blue; 
}

